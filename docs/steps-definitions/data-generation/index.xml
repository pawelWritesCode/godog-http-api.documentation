<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data generation on</title><link>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/</link><description>Recent content in Data generation on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 25 Jan 2022 14:40:56 +0100</lastBuildDate><atom:link href="https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/index.xml" rel="self" type="application/rss+xml"/><item><title>Random boolean</title><link>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-boolean/</link><pubDate>Mon, 27 Mar 2023 08:48:57 +0000</pubDate><guid>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-boolean/</guid><description>I generate a random bool value and save it as &amp;ldquo;([^&amp;rdquo;]*)&amp;quot; #
This step allows to generate random boolean value and save it in scenario cache.
The only one argument it as &amp;quot;([^&amp;quot;]*)&amp;quot; allows you to pick name under which generated boolean value will be saved in scenario cache.
Example:
Given I generate a random bool value and save it as &amp;quot;IS_WATER_BOILING&amp;quot;</description></item><item><title>Random number from the range</title><link>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-number-from-the-range/</link><pubDate>Mon, 27 Mar 2023 08:48:57 +0000</pubDate><guid>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-number-from-the-range/</guid><description>I generate a random &amp;ldquo;(int|float)&amp;rdquo; in the range from &amp;ldquo;([^&amp;rdquo;])&amp;quot; to &amp;ldquo;([^&amp;rdquo;])&amp;quot; and save it as &amp;ldquo;([^&amp;rdquo;]*)&amp;quot; #
This step generates random number and save it in scenario cache. To obtain once saved value, use syntax from text/template package.
First argument random &amp;quot;(int|float)&amp;quot; in allows to pick type of number.
Second argument from &amp;quot;([^&amp;quot;]*)&amp;quot; to &amp;quot;([^&amp;quot;]*)&amp;quot; and allows to pick interval from which number will be generated.
Last argument and save it as &amp;quot;([^&amp;quot;]*)&amp;quot;$ allows you to pick name under which generated number will be saved in scenario cache.</description></item><item><title>Random sentence from provided charset and range</title><link>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-sentence-from-charset-and-range/</link><pubDate>Mon, 27 Mar 2023 08:48:57 +0000</pubDate><guid>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-sentence-from-charset-and-range/</guid><description>I generate a random sentence having from &amp;ldquo;(\d+)&amp;rdquo; to &amp;ldquo;(\d+)&amp;rdquo; of &amp;ldquo;(ASCII|UNICODE|polish|english|russian|japanese|emoji)&amp;rdquo; words and save it as &amp;ldquo;([^&amp;rdquo;]*)&amp;quot; #
This step generates sentence and save it in scenario cache. To obtain once saved value, use syntax from text/template package. This step is something like lorem-ipsum generator.
First two arguments from &amp;quot;(\d+)&amp;quot; to &amp;quot;(\d+)&amp;quot; of allows to pick length of sentence - number of words in it.
Argument of &amp;quot;(ASCII|UNICODE|polish|english|russian|japanese|emoji)&amp;quot; words determine charset from which each word will be generated.</description></item><item><title>Random word from provided charset and range</title><link>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-word-from-charset-and-range/</link><pubDate>Mon, 27 Mar 2023 08:48:57 +0000</pubDate><guid>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/random-word-from-charset-and-range/</guid><description>I generate a random word having from &amp;ldquo;(\d+)&amp;rdquo; to &amp;ldquo;(\d+)&amp;rdquo; of &amp;ldquo;(ASCII|UNICODE|polish|english|russian|japanese|emoji)&amp;rdquo; characters and save it as &amp;ldquo;([^&amp;rdquo;]*)&amp;quot; #
This step generates random word and save it in scenario cache.
First two arguments: from &amp;quot;(\d+)&amp;quot; to &amp;quot;(\d+)&amp;quot; of allows to set length of the word. For example, from &amp;quot;2&amp;quot; to &amp;quot;4&amp;quot; of will generate word having between 2 and 4 characters. If you want to generate word of fixed length simply pass two times the same value: from &amp;quot;4&amp;quot; to &amp;quot;4&amp;quot; of This will generate word having 4 characters.</description></item><item><title>Time object</title><link>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/time-object/</link><pubDate>Mon, 27 Mar 2023 08:48:57 +0000</pubDate><guid>https://pawelwritescode.github.io/godog-http-api.documentation/docs/steps-definitions/data-generation/time-object/</guid><description>I generate current time and travel &amp;ldquo;(backward|forward)&amp;rdquo; &amp;ldquo;([^&amp;rdquo;])&amp;quot; in time and save it as &amp;ldquo;([^&amp;rdquo;])&amp;quot; #
This step allows to generate time object, moved backward/forward in time and save it to scenario cache.
First argument and travel &amp;quot;(backward|forward)&amp;quot; tells whether user want to move forward or backward in time. If you want to simply get current time object just pass any of both.
Second argument &amp;quot;([^&amp;quot;]*)&amp;quot; in time should be string acceptable by time.</description></item></channel></rss>